# In order to override with a bang, I must use exactly the syntax in ~/.vim/bundle/ultisnips/UltiSnip/language.snippets
#snippet "\b(de)?f" "def <name>..." !r
#def
#  $0
#end
#endsnippet
snippet : "hash rocket helper"
:${1:key} => ${0:value}
endsnippet

snippet "\b(de)?f" "def <name>..." r!
def ${1:function_name}
  $0
end
endsnippet

snippet debug "require debug with pry" !b
#gem install debugger-pry debugger-completion
require 'debugger/pry'
debugger
endsnippet

snippet do "do ... end" i!
do
  $0
end
endsnippet

snippet doo "do |<key>| ... end" i!
do |${1:key}|
  $0
end
endsnippet

snippet if "if statement" !b
if $1
  $0
end
endsnippet

snippet logd "log.debug {}" !b
App::Logger.debug { "$1" }
endsnippet

snippet loge "log.error {}" !b
App::Logger.error { "$1" }
endsnippet

snippet logf "log.fatal {}" !b
App::Logger.fatal { "$1" }
endsnippet

snippet logi "log.info {}" !b
App::Logger.info { "$1" }
endsnippet

snippet logw "log.warn {}" !b
App::Logger.warn { "$1" }
endsnippet

snippet logger "Create log file" !b
require 'logger'

module App
  log_filename = File.basename(__FILE__).gsub(/\.rb/, "") + ".log"
  log_path = File.dirname(__FILE__) + "/../log/#{log_filename}"
  Logger = Logger.new(log_path, "weekly")
end
endsnippet

snippet pry "require pry and binding" !b

require 'pry'
binding.pry
exit$0

endsnippet
