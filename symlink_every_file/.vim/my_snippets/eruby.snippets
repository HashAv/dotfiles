snippet % "Create ERB tags" i
<% ${1} %>
endsnippet

snippet = "Create ERB insert tags" i
<%= ${1} %>
endsnippet

snippet : "hash rocket helper"
:${1:key} => ${0:value}
endsnippet

snippet bp "binding.pry" !b
<% binding.pry %>
endsnippet

snippet cf "content_for" !b
<% content_for :${1:key} do %>
  $0
<% end %>
endsnippet

snippet cff "content_for inline (prevents additional white space)" !b
<% content_for :${1:key} do %>$2<% end %>$0
endsnippet

snippet end "ERB end tag" !b
<% end %>
$0
endsnippet

# $1 in replacement string refers to the search string (regex match) and not the place holder
snippet field "form fields" !b
<%= f.label :${2:name} %>
<%= f.${1:text}_field :${2/(\w+).*/$1/} %>$0
endsnippet

snippet ff "custom field construct" !b
<%= field_for(f, :${2:name}) do |f| %>
	<%= f.${1:text}_field :${2/(\w+).*/$1/} %>
<% end %>$0
endsnippet

snippet form_for "form_for" !b
<%= form_for(@${1:model_instance}${2:, html: { autocomplete: "off" }}) do |f| %>
  $0
<% end %>
endsnippet

snippet form_tag "form_tag" !b
<%= form_tag( ${1:named_route}${2:, { autocomplete: "off" }} ) do |f| %>
  $0
<% end %>
endsnippet

snippet if "if statement" !b
<% if $1 %>
  $0
<% end %>
endsnippet

snippet kw "content_for keywords" !b
<% content_for :keywords do %>$0<% end %>

endsnippet

snippet lt "link_to"
link_to "${1:link text}", ${0:named_route}
endsnippet

# $1 in replacement string refers to the search string (regex match) and not the place holder
snippet tag "form tags" !b
<%= label_tag :${2:name} %>
<%= ${1:text}_field_tag :${2/(\w+).*/$1/} %>$0
endsnippet

# $1 in replacement string refers to the search string (regex match) and not the place holder
snippet tagd "form tags with default value" !b
<%= label_tag :${2:name} %>
<%= ${1:type}_field_tag :${2/(\w+).*/$1/}, params[:${2/(\w+).*/$1/}] %>$0
endsnippet
